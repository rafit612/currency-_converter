
import java.awt.List;
import java.io.BufferedReader;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author root
 */
public class currencyconver1 extends javax.swing.JInternalFrame {
    
String[] Currency={"gz`Öv GKK",
"evsjv‡`wk UvKv", "fviZxh় iæwc", "cvwK¯Ívwb iæcx", "BDGmG Wjvi", "BD‡iv", "weÖwUk cvDÛ", "‡KGmG wih়vj", "A‡÷Öwjh়vb Wjvi", "KvbvwWh়vb Wjvi",
"wm½vczi Wjvi", "GwgiwZ w`invg", "AvdMvb AvdMvwb", "Avj‡ewbh়vb †jK", "WvP wMìvi", "Av‡R©w›Ubv †c‡mv", "ezj‡Mwih়vb †jf", "evnivBb w`bvi",
"ewjwfh়vb ewjwfh়v‡bv", "eÖvwRwjh়vb wih‡়j", "fzUvbm GbMëÖvg", "mzBm dÖv¼", "wPwjh়vb †c‡mv", "Bh়vb †ibwgbwe", "Kjw¤^h়vb †c‡mv", "‡Kv÷v wiKvb †Kvjb", "wµR †Kv‡ivbv", "Avj‡Rwih়v w`bvi" ,
"wgki cvDÛ", "Bw_Icxh়vb weW়", "nsKs Wjvi", "nv‡½wih়vb †dvwi›U", "B‡›`v‡bwkh়v iæwch়vn", "BmÖvh‡়‡jv †k‡Kj", "BivwK w`bvi", "Bivwb wih়vj", "AvBmj¨vÛxh় †µvbv",
"RvcvBh়vb Wjvi", "RW©vbxh় w`bvi", "RvcvwbR Bh‡়b", "‡Kwbh়vb wkwjs", "K‡¤^vwWh়vb wih‡়j", "DËi †Kvwih়vb Ih়vb", "`w¶Y †Kvwih়vb Ih়vb", "Kzh‡়wZ w`bvi", "KvRL¯Ívwb †UÄ",
"‡jevwbR cvDÛ", "kÖxj¼vb iæwc", "g‡iv°vb w`bvi", "wKU", "‡gw·Kvb †c‡mv", "gvjh‡়wkh়vb wiw½Z", "wbDwRj¨vÛ Wjvi", "Igvb wih়vj", "‡ivgvwbh়vb wjD", "ivwkh়vb iæ‡ej" , "ZzwK© wjiv", "wmjfvi AvDÝ", "‡mvbvi AvDÝ", "c­¨vwUbvg AvDÝ", "weUKh‡়b"};

double Bangladesh = 109.408 , India = 92.7478 ,Pakistan =200.550 ,USA = 1.29221 ,Europe= 1.16989 , UK= 1 ,KSA=4.85180 , Australia=1.90035 , Canada=1.71097 , Singapore=1.76119 , UAE=4.75479 ,
Afghan=100.824, Albania=141.884,Dutch=2.57809,Argentina=77.0273,Bulgaria=2.28810,Bahrain=0.48295 , Bolivia=8.71082 , Brazil=5.43142, Bhutan=92.7478 , Swiss=1.28072, Chile=996.830, China=9.08389, 
Colombia=4424.02 , CostaRica=736.796 , Czech=29.9273, Algeria=154.694,Egypt=20.8377,Ethiopia=37.8939,HongKong=10.1353, Hungaria=391.860, Indionesia=18213.4, Israel=4.47660, Iraq=1527.56, 
Iran=54445.8,Iceland=158.825,Jamaica=179.836,Jordan=0.91795,Japan=140.84,Kenya=130.422,Cambodia=5151.52,NorthKorean=174.786,SouthKorea=1507.88,Kuwait=0.392201,Kazakhstan=498.954,Lebanon=1951.78,SriLanka=230.523,
Morocco=12.3102,Myanmar=1935.34,Mexico=24.9071,Malaysia=5.37576,NewZealand=2.02224,Oman=0.49707,Romania=5.57925,Russia=82.5890,Turkey=7.42376,Silver=0.07639,Gold=0.00088,Platinum=0.00145,
Bitcoin=0.00015;
    

    /**
     * Creates new form currencyconver
     */

   
    public currencyconver1() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jPanel1 = new javax.swing.JPanel();
        second = new javax.swing.JComboBox<>();
        from = new javax.swing.JComboBox<>();
        fourth = new javax.swing.JComboBox<>();
        first = new javax.swing.JComboBox<>();
        third = new javax.swing.JComboBox<>();
        fromtext = new javax.swing.JTextField();
        firsttext = new javax.swing.JTextField();
        secondtext = new javax.swing.JTextField();
        thirdtext = new javax.swing.JTextField();
        fourthtext = new javax.swing.JTextField();
        firsttitle = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fourthtitle = new javax.swing.JLabel();
        secondtitle = new javax.swing.JLabel();
        thirdtitle = new javax.swing.JLabel();
        unit5 = new javax.swing.JLabel();
        unit3 = new javax.swing.JLabel();
        unit2 = new javax.swing.JLabel();
        unit1 = new javax.swing.JLabel();
        unit4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        reset = new javax.swing.JButton();
        convert = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(960, 560));

        jPanel1.setBackground(new java.awt.Color(255, 135, 0));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        second.setBackground(new java.awt.Color(93, 236, 87));
        second.setFont(new java.awt.Font("Cantarell Thin", 1, 18)); // NOI18N
        second.setForeground(new java.awt.Color(225, 23, 10));
        second.setMaximumRowCount(10);
        second.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Currency", "Bangladesh", "India", "Pakistan", "USA", "Europe", "UK", "KSA", "Australia", "Canada", "Singapore", "UAE", "Afghan", "Albania", "Dutch", "Argentina", "Bulgaria", "Bahrain", "Bolivia", "Brazil", "Bhutan", "Swiss", "Chile", "China", "Colombia", "Costa Rica", "Czech", "Algeria", "Egypt", "Ethiopia", "Hong Kong", "Hungaria", "Indionesia", "Israel", "Iraq", "Iran", "Iceland", "Jamaica", "Jordan", "Japan", "Kenya", "Cambodia", "North Korean", "South Korea", "Kuwait", "Kazakhstan", "Lebanon", "Sri Lanka", "Morocco", "Myanmar", "Mexico", "Malaysia", "New Zealand", "Oman", "Romania", "Russia", "Turkey", "Silver Ounce", "Gold Ounce", "Platinum Ounce", "Bitcoin" }));
        second.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                secondItemStateChanged(evt);
            }
        });

        from.setBackground(new java.awt.Color(187, 51, 42));
        from.setFont(new java.awt.Font("Cantarell Thin", 1, 18)); // NOI18N
        from.setMaximumRowCount(10);
        from.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Currency", "Bangladesh", "India", "Pakistan", "USA", "Europe", "UK", "KSA", "Australia", "Canada", "Singapore", "UAE", "Afghan", "Albania", "Dutch", "Argentina", "Bulgaria", "Bahrain", "Bolivia", "Brazil", "Bhutan", "Swiss", "Chile", "China", "Colombia", "Costa Rica", "Czech", "Algeria", "Egypt", "Ethiopia", "Hong Kong", "Hungaria", "Indionesia", "Israel", "Iraq", "Iran", "Iceland", "Jamaica", "Jordan", "Japan", "Kenya", "Cambodia", "North Korean", "South Korea", "Kuwait", "Kazakhstan", "Lebanon", "Sri Lanka", "Morocco", "Myanmar", "Mexico", "Malaysia", "New Zealand", "Oman", "Romania", "Russia", "Turkey", "Silver Ounce", "Gold Ounce", "Platinum Ounce", "Bitcoin" }));
        from.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fromItemStateChanged(evt);
            }
        });
        from.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromActionPerformed(evt);
            }
        });

        fourth.setBackground(new java.awt.Color(93, 236, 87));
        fourth.setFont(new java.awt.Font("Cantarell Thin", 1, 18)); // NOI18N
        fourth.setForeground(new java.awt.Color(225, 23, 10));
        fourth.setMaximumRowCount(10);
        fourth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Currency", "Bangladesh", "India", "Pakistan", "USA", "Europe", "UK", "KSA", "Australia", "Canada", "Singapore", "UAE", "Afghan", "Albania", "Dutch", "Argentina", "Bulgaria", "Bahrain", "Bolivia", "Brazil", "Bhutan", "Swiss", "Chile", "China", "Colombia", "Costa Rica", "Czech", "Algeria", "Egypt", "Ethiopia", "Hong Kong", "Hungaria", "Indionesia", "Israel", "Iraq", "Iran", "Iceland", "Jamaica", "Jordan", "Japan", "Kenya", "Cambodia", "North Korean", "South Korea", "Kuwait", "Kazakhstan", "Lebanon", "Sri Lanka", "Morocco", "Myanmar", "Mexico", "Malaysia", "New Zealand", "Oman", "Romania", "Russia", "Turkey", "Silver Ounce", "Gold Ounce", "Platinum Ounce", "Bitcoin" }));
        fourth.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fourthItemStateChanged(evt);
            }
        });
        fourth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourthActionPerformed(evt);
            }
        });

        first.setBackground(new java.awt.Color(93, 236, 87));
        first.setFont(new java.awt.Font("Cantarell Thin", 1, 18)); // NOI18N
        first.setForeground(new java.awt.Color(225, 23, 10));
        first.setMaximumRowCount(10);
        first.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Currency", "Bangladesh", "India", "Pakistan", "USA", "Europe", "UK", "KSA", "Australia", "Canada", "Singapore", "UAE", "Afghan", "Albania", "Dutch", "Argentina", "Bulgaria", "Bahrain", "Bolivia", "Brazil", "Bhutan", "Swiss", "Chile", "China", "Colombia", "Costa Rica", "Czech", "Algeria", "Egypt", "Ethiopia", "Hong Kong", "Hungaria", "Indionesia", "Israel", "Iraq", "Iran", "Iceland", "Jamaica", "Jordan", "Japan", "Kenya", "Cambodia", "North Korean", "South Korea", "Kuwait", "Kazakhstan", "Lebanon", "Sri Lanka", "Morocco", "Myanmar", "Mexico", "Malaysia", "New Zealand", "Oman", "Romania", "Russia", "Turkey", "Silver Ounce", "Gold Ounce", "Platinum Ounce", "Bitcoin" }));
        first.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                firstItemStateChanged(evt);
            }
        });

        third.setBackground(new java.awt.Color(93, 236, 87));
        third.setFont(new java.awt.Font("Cantarell Thin", 1, 18)); // NOI18N
        third.setForeground(new java.awt.Color(225, 23, 10));
        third.setMaximumRowCount(10);
        third.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Currency", "Bangladesh", "India", "Pakistan", "USA", "Europe", "UK", "KSA", "Australia", "Canada", "Singapore", "UAE", "Afghan", "Albania", "Dutch", "Argentina", "Bulgaria", "Bahrain", "Bolivia", "Brazil", "Bhutan", "Swiss", "Chile", "China", "Colombia", "Costa Rica", "Czech", "Algeria", "Egypt", "Ethiopia", "Hong Kong", "Hungaria", "Indionesia", "Israel", "Iraq", "Iran", "Iceland", "Jamaica", "Jordan", "Japan", "Kenya", "Cambodia", "North Korean", "South Korea", "Kuwait", "Kazakhstan", "Lebanon", "Sri Lanka", "Morocco", "Myanmar", "Mexico", "Malaysia", "New Zealand", "Oman", "Romania", "Russia", "Turkey", "Silver Ounce", "Gold Ounce", "Platinum Ounce", "Bitcoin" }));
        third.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                thirdItemStateChanged(evt);
            }
        });

        fromtext.setBackground(new java.awt.Color(239, 174, 170));
        fromtext.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        fromtext.setForeground(new java.awt.Color(24, 22, 223));

        firsttext.setBackground(new java.awt.Color(123, 249, 117));
        firsttext.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        firsttext.setForeground(new java.awt.Color(249, 10, 10));
        firsttext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firsttextActionPerformed(evt);
            }
        });

        secondtext.setBackground(new java.awt.Color(93, 236, 87));
        secondtext.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        secondtext.setForeground(new java.awt.Color(249, 10, 10));

        thirdtext.setBackground(new java.awt.Color(93, 236, 87));
        thirdtext.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        thirdtext.setForeground(new java.awt.Color(249, 10, 10));

        fourthtext.setBackground(new java.awt.Color(93, 236, 87));
        fourthtext.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        fourthtext.setForeground(new java.awt.Color(249, 10, 10));

        firsttitle.setBackground(new java.awt.Color(13, 165, 243));
        firsttitle.setFont(new java.awt.Font("SutonnyMJ", 1, 15)); // NOI18N
        firsttitle.setText("c«_g gy`«v");

        jLabel2.setBackground(new java.awt.Color(243, 243, 13));
        jLabel2.setFont(new java.awt.Font("SutonnyMJ", 1, 15)); // NOI18N
        jLabel2.setText("iƒcvš—i Ki‡Z gy`«v wbe©vPb Ki“b");

        fourthtitle.setBackground(new java.awt.Color(13, 165, 243));
        fourthtitle.setFont(new java.awt.Font("SutonnyMJ", 1, 15)); // NOI18N
        fourthtitle.setText("PZy_© gy`«v");

        secondtitle.setBackground(new java.awt.Color(13, 165, 243));
        secondtitle.setFont(new java.awt.Font("SutonnyMJ", 1, 15)); // NOI18N
        secondtitle.setText("wØZxh় gy`«v");

        thirdtitle.setBackground(new java.awt.Color(13, 165, 243));
        thirdtitle.setFont(new java.awt.Font("SutonnyMJ", 1, 15)); // NOI18N
        thirdtitle.setText("Z…Zxh gy`«v");

        unit5.setBackground(new java.awt.Color(204, 129, 196));
        unit5.setFont(new java.awt.Font("SutonnyMJ", 1, 15)); // NOI18N
        unit5.setText("gy`«v GKK");

        unit3.setBackground(new java.awt.Color(204, 129, 196));
        unit3.setFont(new java.awt.Font("SutonnyMJ", 1, 15)); // NOI18N
        unit3.setText("gy`«v GKK");

        unit2.setBackground(new java.awt.Color(204, 129, 196));
        unit2.setFont(new java.awt.Font("SutonnyMJ", 1, 15)); // NOI18N
        unit2.setText("gy`«v GKK");

        unit1.setBackground(new java.awt.Color(243, 243, 13));
        unit1.setFont(new java.awt.Font("SutonnyMJ", 1, 15)); // NOI18N
        unit1.setText("gy`«v GKK");

        unit4.setBackground(new java.awt.Color(204, 129, 196));
        unit4.setFont(new java.awt.Font("SutonnyMJ", 1, 15)); // NOI18N
        unit4.setText("gy`«v GKK");

        jPanel2.setBackground(new java.awt.Color(148, 152, 231));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(7, 121, 113));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 17, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(7, 121, 113));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(7, 121, 113));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        reset.setBackground(new java.awt.Color(244, 5, 116));
        reset.setFont(new java.awt.Font("SutonnyMJ", 1, 15)); // NOI18N
        reset.setForeground(new java.awt.Color(28, 134, 11));
        reset.setText("bZyb K‡i");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        convert.setBackground(new java.awt.Color(244, 5, 116));
        convert.setFont(new java.awt.Font("SutonnyMJ", 1, 15)); // NOI18N
        convert.setForeground(new java.awt.Color(28, 134, 11));
        convert.setText("iƒcvš—i \t ");
        convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(convert, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(from, 0, 0, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fromtext)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(unit1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firsttitle, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(first, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firsttext, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unit2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thirdtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(third, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thirdtext, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unit4, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(secondtext, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(second, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unit3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(fourth, 0, 186, Short.MAX_VALUE)
                        .addComponent(fourthtext)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(unit5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(fourthtitle))
                    .addComponent(reset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(243, 243, 243)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(secondtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firsttitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(second, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(secondtext, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(first, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(firsttext, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unit3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(unit2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(fourthtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(thirdtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(third, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fourth, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fourthtext, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                            .addComponent(thirdtext))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unit4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(unit5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(fromtext, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(unit1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(convert, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void convertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertActionPerformed

        if(from.getSelectedIndex()==0 || second.getSelectedIndex()==0 ||
            third.getSelectedIndex()==0 || fourth.getSelectedIndex()==0
            ||fromtext.getText().equals("")){
            JOptionPane.showMessageDialog(null,"You must select atleast two currency .One is from (from box) and another from other 4 box","Hakuna Matata",
                JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try
        {
            BufferedReader in = new BufferedReader(new FileReader(new File("Untitled Document 1.txt")));
            System.out.println("File open successful!");

            int line = 0;
            double[] tempArray2 = new double[3000];
            String[] tempArray = new String[3000];
            try {

                for (String x = in.readLine(); x != null; x = in.readLine()){
                    System.out.println(x);
                    String[] tokens = x.split("=");
                    line++;
                    tempArray[line] = tokens[0];
                    line++;
                    tempArray2[line] = Double.parseDouble(tokens[1]);
                }
            } catch (IOException ex) {
                System.out.println("Error: opening file");
                Logger.getLogger(currencyconver.class.getName()).log(Level.SEVERE, null, ex);
            }
            double amountchange = Double.parseDouble(fromtext.getText());
            double amountpound =0.0;
             switch(from.getSelectedItem().toString()){
            case "USA": amountpound=amountchange/ tempArray2[8];
            break;
            case "Bangladesh": amountpound=amountchange/tempArray2[2];
            break;
            case "India": amountpound=amountchange/tempArray2[4];
            break;
            case "Pakistan": amountpound=amountchange/tempArray2[6];
            break;
            case "Europe": amountpound=amountchange/tempArray2[10];
            break;
            case "UK": amountpound=amountchange/tempArray2[12];
            break;
            case "KSA": amountpound=amountchange/tempArray2[14];
            break;
            case "Australia": amountpound=amountchange/tempArray2[16];
            break;
            case "Canada": amountpound = amountchange/tempArray2[18];
            break;
            case "Singapore": amountpound=amountchange/tempArray2[20];
            break;
            case "UAE": amountpound=amountchange/tempArray2[22];
            break;
            case "Afghan": amountpound=amountchange/tempArray2[24];
            break;
            case "Albania": amountpound=amountchange/tempArray2[26];
            break;
            case "Dutch": amountpound=amountchange/tempArray2[28];
            break;
            case "Argentina": amountpound=amountchange/tempArray2[30];
            break;
            case "Bulgaria": amountpound=amountchange/tempArray2[32];
            break;
            case "Bahrain": amountpound=amountchange/tempArray2[34];
            break;
            case "Bolivia": amountpound=amountchange/tempArray2[36];
            break;
            case "Brazil": amountpound=amountchange/tempArray2[38];
            break;
            case "Bhutan": amountpound=amountchange/tempArray2[40];
            break;
            case "Swiss": amountpound=amountchange/tempArray2[42];
            break;
            case "Chile": amountpound=amountchange/tempArray2[44];
            break;
            case "Colombia": amountpound=amountchange/tempArray2[48];
            break;
            case "China": amountpound=amountchange/tempArray2[46];
            break;
            case "Costa Rica": amountpound=amountchange/tempArray2[50];
            break;
            case "Czech": amountpound=amountchange/tempArray2[52];
            break;
            case "Algeria": amountpound=amountchange/tempArray2[54];
            break;
            case "Egypt": amountpound=amountchange/tempArray2[56];
            break;
            case "Ethiopia": amountpound=amountchange/tempArray2[58];
            break;
            case "Hong Kong": amountpound=amountchange/tempArray2[60];
            break;
            case "Hungaria": amountpound=amountchange/tempArray2[62];
            break;
            case "Indionesia": amountpound=amountchange/tempArray2[64];
            break;
            case "Israel": amountpound=amountchange/tempArray2[66];
            break;
            case "Iraq": amountpound=amountchange/tempArray2[68];
            break;
            case "Iran": amountpound=amountchange/tempArray2[70];
            break;
            case "Iceland": amountpound=amountchange/tempArray2[72];
            break;
            case "Jamaica": amountpound=amountchange/tempArray2[74];
            break;
            case "Jordan": amountpound=amountchange/tempArray2[76];
            break;
            case "Japan": amountpound=amountchange/tempArray2[78];
            break;
            case "Kenya": amountpound=amountchange/tempArray2[80];
            break;
            case "Cambodia": amountpound=amountchange/tempArray2[82];
            break;
            case "North Korean": amountpound=amountchange/tempArray2[84];
            break;
            case "South Korea": amountpound=amountchange/tempArray2[86];
            break;
            case "Kuwait": amountpound=amountchange/tempArray2[88];
            break;
            case "Kazakhstan": amountpound=amountchange/tempArray2[90];
            break;
            case "Lebanon": amountpound=amountchange/tempArray2[92];
            break;
            case "Sri Lanka": amountpound=amountchange/tempArray2[94];
            break;
            case "Morocco": amountpound=amountchange/tempArray2[96];
            break;
            case "Myanmar": amountpound=amountchange/tempArray2[98];
            break;
            case "Mexico": amountpound=amountchange/tempArray2[100];
            break;
            case "Malaysia": amountpound=amountchange/tempArray2[102];
            break;
            case "New Zealand": amountpound=amountchange/tempArray2[104];
            break;
            case "Oman": amountpound=amountchange/tempArray2[106];
            break;
            case "Romania": amountpound=amountchange/tempArray2[108];
            break;
            case "Russia": amountpound=amountchange/tempArray2[110];
            break;
            case "Turkey": amountpound=amountchange/tempArray2[112];
            break;
            case "Silver Ounce": amountpound=amountchange/tempArray2[114];
            break;
            case "Gold Ounce": amountpound=amountchange/tempArray2[116] ;
            break;
            case "Platinum Ounce": amountpound=amountchange/tempArray2[118];
            break;
            case "Bitcoin": amountpound= amountchange/tempArray2[120];
            break;
            
        }
        double amountchanged =0.0;
        switch(first.getSelectedItem().toString()){
            case "USA": amountchanged= amountpound *tempArray2[8];
            break;
            case "Bangladesh": amountchanged= amountpound *tempArray2[2];
            break;
            case "India": amountchanged= amountpound *tempArray2[4];
            break;
            case "Pakistan": amountchanged= amountpound *tempArray2[6];
            break;
            case "Europe": amountchanged= amountpound *tempArray2[10];
            break;
            case "UK": amountchanged= amountpound *tempArray2[12];
            break;
            case "KSA": amountchanged= amountpound *tempArray2[14];
            break;
            case "Australia": amountchanged= amountpound *tempArray2[16];
            break;
            case "Canada": amountchanged= amountpound *tempArray2[18];
            break;
            case "Singapore": amountchanged= amountpound *tempArray2[20];
            break;
            case "UAE": amountchanged= amountpound *tempArray2[22];
            break;
            case "Afghan": amountchanged= amountpound *tempArray2[24];
            break;
            case "Albania": amountchanged= amountpound *tempArray2[26];
            break;
            case "Dutch": amountchanged= amountpound *tempArray2[28];
            break;
            case "Argentina": amountchanged= amountpound *tempArray2[30];
            break;
            case "Bulgaria": amountchanged= amountpound *tempArray2[32];
            break;
            case "Bahrain": amountchanged= amountpound *tempArray2[34];
            break;
            case "Bolivia": amountchanged= amountpound *tempArray2[36];
            break;
            case "Brazil": amountchanged= amountpound *tempArray2[38];
            break;
            case "Bhutan": amountchanged= amountpound *tempArray2[40];
            break;
            case "Swiss": amountchanged= amountpound *tempArray2[42];
            break;
            case "Chile": amountchanged= amountpound *tempArray2[44];
            break;
            case "Colombia": amountchanged= amountpound *tempArray2[48];
            break;
            case "China": amountchanged= amountpound *tempArray2[46];
            break;
            case "Costa Rica": amountchanged= amountpound *tempArray2[50];
            break;
            case "Czech": amountchanged= amountpound *tempArray2[52];
            break;
            case "Algeria":amountchanged= amountpound *tempArray2[54];
            break;
            case "Egypt":amountchanged= amountpound *tempArray2[56];
            break;
            case "Ethiopia": amountchanged= amountpound *tempArray2[58];
            break;
            case "Hong Kong": amountchanged= amountpound *tempArray2[60];
            break;
            case "Hungaria": amountchanged= amountpound *tempArray2[62];
            break;
            case "Indionesia": amountchanged= amountpound *tempArray2[64];
            break;
            case "Israel": amountchanged= amountpound *tempArray2[66];
            break;
            case "Iraq": amountchanged= amountpound *tempArray2[68];
            break;
            case "Iran": amountchanged= amountpound *tempArray2[70];
            break;
            case "Iceland":amountchanged= amountpound *tempArray2[72];
            break;
            case "Jamaica":amountchanged= amountpound *tempArray2[74];
            break;
            case "Jordan": amountchanged= amountpound *tempArray2[76];
            break;
            case "Japan": amountchanged= amountpound *tempArray2[78];
            break;
            case "Kenya": amountchanged= amountpound *tempArray2[80];
            break;
            case "Cambodia": amountchanged= amountpound *tempArray2[82];
            break;
            case "North Korean": amountchanged= amountpound *tempArray2[84];
            break;
            case "South Korea": amountchanged= amountpound *tempArray2[86];
            break;
            case "Kuwait": amountchanged= amountpound *tempArray2[88];
            break;
            case "Kazakhstan": amountchanged= amountpound *tempArray2[90];
            break;
            case "Lebanon": amountchanged= amountpound *tempArray2[92];
            break;
            case "Sri Lanka":amountchanged= amountpound *tempArray2[94];
            break;
            case "Morocco": amountchanged= amountpound *tempArray2[96];
            break;
            case "Myanmar": amountchanged= amountpound *tempArray2[98];
            break;
            case "Mexico": amountchanged= amountpound *tempArray2[100];
            break;
            case "Malaysia": amountchanged= amountpound *tempArray2[102];
            break;
            case "New Zealand": amountchanged= amountpound *tempArray2[104];
            break;
            case "Oman": amountchanged= amountpound *tempArray2[106];
            break;
            case "Romania": amountchanged= amountpound *tempArray2[108];
            break;
            case "Russia": amountchanged= amountpound *tempArray2[110];
            break;
            case "Turkey": amountchanged= amountpound *tempArray2[112];
            break;
            case "Silver Ounce": amountchanged= amountpound *tempArray2[114];
            break;
            case "Gold Ounce": amountchanged= amountpound *tempArray2[116] ;
            break;
            case "Platinum Ounce": amountchanged= amountpound *tempArray2[118];
            break;
            case "Bitcoin": amountchanged= amountpound *tempArray2[120];
            break;  
        }
        String value = String.format("%.3f",amountchanged);
        firsttext.setText(value);
        
        amountchanged =0.0;
        switch(second.getSelectedItem().toString()){
            case "USA": amountchanged= amountpound *tempArray2[8];
            break;
            case "Bangladesh": amountchanged= amountpound *tempArray2[2];
            break;
            case "India": amountchanged= amountpound *tempArray2[4];
            break;
            case "Pakistan": amountchanged= amountpound *tempArray2[6];
            break;
            case "Europe": amountchanged= amountpound *tempArray2[10];
            break;
            case "UK": amountchanged= amountpound *tempArray2[12];
            break;
            case "KSA": amountchanged= amountpound *tempArray2[14];
            break;
            case "Australia": amountchanged= amountpound *tempArray2[16];
            break;
            case "Canada": amountchanged= amountpound *tempArray2[18];
            break;
            case "Singapore": amountchanged= amountpound *tempArray2[20];
            break;
            case "UAE": amountchanged= amountpound *tempArray2[22];
            break;
            case "Afghan": amountchanged= amountpound *tempArray2[24];
            break;
            case "Albania": amountchanged= amountpound *tempArray2[26];
            break;
            case "Dutch": amountchanged= amountpound *tempArray2[28];
            break;
            case "Argentina": amountchanged= amountpound *tempArray2[30];
            break;
            case "Bulgaria": amountchanged= amountpound *tempArray2[32];
            break;
            case "Bahrain": amountchanged= amountpound *tempArray2[34];
            break;
            case "Bolivia": amountchanged= amountpound *tempArray2[36];
            break;
            case "Brazil": amountchanged= amountpound *tempArray2[38];
            break;
            case "Bhutan": amountchanged= amountpound *tempArray2[40];
            break;
            case "Swiss": amountchanged= amountpound *tempArray2[42];
            break;
            case "Chile": amountchanged= amountpound *tempArray2[44];
            break;
            case "Colombia": amountchanged= amountpound *tempArray2[48];
            break;
            case "China": amountchanged= amountpound *tempArray2[46];
            break;
            case "Costa Rica": amountchanged= amountpound *tempArray2[50];
            break;
            case "Czech": amountchanged= amountpound *tempArray2[52];
            break;
            case "Algeria":amountchanged= amountpound *tempArray2[54];
            break;
            case "Egypt":amountchanged= amountpound *tempArray2[56];
            break;
            case "Ethiopia": amountchanged= amountpound *tempArray2[58];
            break;
            case "Hong Kong": amountchanged= amountpound *tempArray2[60];
            break;
            case "Hungaria": amountchanged= amountpound *tempArray2[62];
            break;
            case "Indionesia": amountchanged= amountpound *tempArray2[64];
            break;
            case "Israel": amountchanged= amountpound *tempArray2[66];
            break;
            case "Iraq": amountchanged= amountpound *tempArray2[68];
            break;
            case "Iran": amountchanged= amountpound *tempArray2[70];
            break;
            case "Iceland":amountchanged= amountpound *tempArray2[72];
            break;
            case "Jamaica":amountchanged= amountpound *tempArray2[74];
            break;
            case "Jordan": amountchanged= amountpound *tempArray2[76];
            break;
            case "Japan": amountchanged= amountpound *tempArray2[78];
            break;
            case "Kenya": amountchanged= amountpound *tempArray2[80];
            break;
            case "Cambodia": amountchanged= amountpound *tempArray2[82];
            break;
            case "North Korean": amountchanged= amountpound *tempArray2[84];
            break;
            case "South Korea": amountchanged= amountpound *tempArray2[86];
            break;
            case "Kuwait": amountchanged= amountpound *tempArray2[88];
            break;
            case "Kazakhstan": amountchanged= amountpound *tempArray2[90];
            break;
            case "Lebanon": amountchanged= amountpound *tempArray2[92];
            break;
            case "Sri Lanka":amountchanged= amountpound *tempArray2[94];
            break;
            case "Morocco": amountchanged= amountpound *tempArray2[96];
            break;
            case "Myanmar": amountchanged= amountpound *tempArray2[98];
            break;
            case "Mexico": amountchanged= amountpound *tempArray2[100];
            break;
            case "Malaysia": amountchanged= amountpound *tempArray2[102];
            break;
            case "New Zealand": amountchanged= amountpound *tempArray2[104];
            break;
            case "Oman": amountchanged= amountpound *tempArray2[106];
            break;
            case "Romania": amountchanged= amountpound *tempArray2[108];
            break;
            case "Russia": amountchanged= amountpound *tempArray2[110];
            break;
            case "Turkey": amountchanged= amountpound *tempArray2[112];
            break;
            case "Silver Ounce": amountchanged= amountpound *tempArray2[114];
            break;
            case "Gold Ounce": amountchanged= amountpound *tempArray2[116] ;
            break;
            case "Platinum Ounce": amountchanged= amountpound *tempArray2[118];
            break;
            case "Bitcoin": amountchanged= amountpound *tempArray2[120];
            break;  
        }
        String value1 = String.format("%.3f",amountchanged);
        secondtext.setText(value1);
        
        amountchanged =0.0;
        switch(third.getSelectedItem().toString()){
            case "USA": amountchanged= amountpound *tempArray2[8];
            break;
            case "Bangladesh": amountchanged= amountpound *tempArray2[2];
            break;
            case "India": amountchanged= amountpound *tempArray2[4];
            break;
            case "Pakistan": amountchanged= amountpound *tempArray2[6];
            break;
            case "Europe": amountchanged= amountpound *tempArray2[10];
            break;
            case "UK": amountchanged= amountpound *tempArray2[12];
            break;
            case "KSA": amountchanged= amountpound *tempArray2[14];
            break;
            case "Australia": amountchanged= amountpound *tempArray2[16];
            break;
            case "Canada": amountchanged= amountpound *tempArray2[18];
            break;
            case "Singapore": amountchanged= amountpound *tempArray2[20];
            break;
            case "UAE": amountchanged= amountpound *tempArray2[22];
            break;
            case "Afghan": amountchanged= amountpound *tempArray2[24];
            break;
            case "Albania": amountchanged= amountpound *tempArray2[26];
            break;
            case "Dutch": amountchanged= amountpound *tempArray2[28];
            break;
            case "Argentina": amountchanged= amountpound *tempArray2[30];
            break;
            case "Bulgaria": amountchanged= amountpound *tempArray2[32];
            break;
            case "Bahrain": amountchanged= amountpound *tempArray2[34];
            break;
            case "Bolivia": amountchanged= amountpound *tempArray2[36];
            break;
            case "Brazil": amountchanged= amountpound *tempArray2[38];
            break;
            case "Bhutan": amountchanged= amountpound *tempArray2[40];
            break;
            case "Swiss": amountchanged= amountpound *tempArray2[42];
            break;
            case "Chile": amountchanged= amountpound *tempArray2[44];
            break;
            case "Colombia": amountchanged= amountpound *tempArray2[48];
            break;
            case "China": amountchanged= amountpound *tempArray2[46];
            break;
            case "Costa Rica": amountchanged= amountpound *tempArray2[50];
            break;
            case "Czech": amountchanged= amountpound *tempArray2[52];
            break;
            case "Algeria":amountchanged= amountpound *tempArray2[54];
            break;
            case "Egypt":amountchanged= amountpound *tempArray2[56];
            break;
            case "Ethiopia": amountchanged= amountpound *tempArray2[58];
            break;
            case "Hong Kong": amountchanged= amountpound *tempArray2[60];
            break;
            case "Hungaria": amountchanged= amountpound *tempArray2[62];
            break;
            case "Indionesia": amountchanged= amountpound *tempArray2[64];
            break;
            case "Israel": amountchanged= amountpound *tempArray2[66];
            break;
            case "Iraq": amountchanged= amountpound *tempArray2[68];
            break;
            case "Iran": amountchanged= amountpound *tempArray2[70];
            break;
            case "Iceland":amountchanged= amountpound *tempArray2[72];
            break;
            case "Jamaica":amountchanged= amountpound *tempArray2[74];
            break;
            case "Jordan": amountchanged= amountpound *tempArray2[76];
            break;
            case "Japan": amountchanged= amountpound *tempArray2[78];
            break;
            case "Kenya": amountchanged= amountpound *tempArray2[80];
            break;
            case "Cambodia": amountchanged= amountpound *tempArray2[82];
            break;
            case "North Korean": amountchanged= amountpound *tempArray2[84];
            break;
            case "South Korea": amountchanged= amountpound *tempArray2[86];
            break;
            case "Kuwait": amountchanged= amountpound *tempArray2[88];
            break;
            case "Kazakhstan": amountchanged= amountpound *tempArray2[90];
            break;
            case "Lebanon": amountchanged= amountpound *tempArray2[92];
            break;
            case "Sri Lanka":amountchanged= amountpound *tempArray2[94];
            break;
            case "Morocco": amountchanged= amountpound *tempArray2[96];
            break;
            case "Myanmar": amountchanged= amountpound *tempArray2[98];
            break;
            case "Mexico": amountchanged= amountpound *tempArray2[100];
            break;
            case "Malaysia": amountchanged= amountpound *tempArray2[102];
            break;
            case "New Zealand": amountchanged= amountpound *tempArray2[104];
            break;
            case "Oman": amountchanged= amountpound *tempArray2[106];
            break;
            case "Romania": amountchanged= amountpound *tempArray2[108];
            break;
            case "Russia": amountchanged= amountpound *tempArray2[110];
            break;
            case "Turkey": amountchanged= amountpound *tempArray2[112];
            break;
            case "Silver Ounce": amountchanged= amountpound *tempArray2[114];
            break;
            case "Gold Ounce": amountchanged= amountpound *tempArray2[116] ;
            break;
            case "Platinum Ounce": amountchanged= amountpound *tempArray2[118];
            break;
            case "Bitcoin": amountchanged= amountpound *tempArray2[120];
            break;  
        }
        String value2 = String.format("%.3f",amountchanged);
        thirdtext.setText(value2);
        
        amountchanged =0.0;
        switch(fourth.getSelectedItem().toString()){
            case "USA": amountchanged= amountpound *tempArray2[8];
            break;
            case "Bangladesh": amountchanged= amountpound *tempArray2[2];
            break;
            case "India": amountchanged= amountpound *tempArray2[4];
            break;
            case "Pakistan": amountchanged= amountpound *tempArray2[6];
            break;
            case "Europe": amountchanged= amountpound *tempArray2[10];
            break;
            case "UK": amountchanged= amountpound *tempArray2[12];
            break;
            case "KSA": amountchanged= amountpound *tempArray2[14];
            break;
            case "Australia": amountchanged= amountpound *tempArray2[16];
            break;
            case "Canada": amountchanged= amountpound *tempArray2[18];
            break;
            case "Singapore": amountchanged= amountpound *tempArray2[20];
            break;
            case "UAE": amountchanged= amountpound *tempArray2[22];
            break;
            case "Afghan": amountchanged= amountpound *tempArray2[24];
            break;
            case "Albania": amountchanged= amountpound *tempArray2[26];
            break;
            case "Dutch": amountchanged= amountpound *tempArray2[28];
            break;
            case "Argentina": amountchanged= amountpound *tempArray2[30];
            break;
            case "Bulgaria": amountchanged= amountpound *tempArray2[32];
            break;
            case "Bahrain": amountchanged= amountpound *tempArray2[34];
            break;
            case "Bolivia": amountchanged= amountpound *tempArray2[36];
            break;
            case "Brazil": amountchanged= amountpound *tempArray2[38];
            break;
            case "Bhutan": amountchanged= amountpound *tempArray2[40];
            break;
            case "Swiss": amountchanged= amountpound *tempArray2[42];
            break;
            case "Chile": amountchanged= amountpound *tempArray2[44];
            break;
            case "Colombia": amountchanged= amountpound *tempArray2[48];
            break;
            case "China": amountchanged= amountpound *tempArray2[46];
            break;
            case "Costa Rica": amountchanged= amountpound *tempArray2[50];
            break;
            case "Czech": amountchanged= amountpound *tempArray2[52];
            break;
            case "Algeria":amountchanged= amountpound *tempArray2[54];
            break;
            case "Egypt":amountchanged= amountpound *tempArray2[56];
            break;
            case "Ethiopia": amountchanged= amountpound *tempArray2[58];
            break;
            case "Hong Kong": amountchanged= amountpound *tempArray2[60];
            break;
            case "Hungaria": amountchanged= amountpound *tempArray2[62];
            break;
            case "Indionesia": amountchanged= amountpound *tempArray2[64];
            break;
            case "Israel": amountchanged= amountpound *tempArray2[66];
            break;
            case "Iraq": amountchanged= amountpound *tempArray2[68];
            break;
            case "Iran": amountchanged= amountpound *tempArray2[70];
            break;
            case "Iceland":amountchanged= amountpound *tempArray2[72];
            break;
            case "Jamaica":amountchanged= amountpound *tempArray2[74];
            break;
            case "Jordan": amountchanged= amountpound *tempArray2[76];
            break;
            case "Japan": amountchanged= amountpound *tempArray2[78];
            break;
            case "Kenya": amountchanged= amountpound *tempArray2[80];
            break;
            case "Cambodia": amountchanged= amountpound *tempArray2[82];
            break;
            case "North Korean": amountchanged= amountpound *tempArray2[84];
            break;
            case "South Korea": amountchanged= amountpound *tempArray2[86];
            break;
            case "Kuwait": amountchanged= amountpound *tempArray2[88];
            break;
            case "Kazakhstan": amountchanged= amountpound *tempArray2[90];
            break;
            case "Lebanon": amountchanged= amountpound *tempArray2[92];
            break;
            case "Sri Lanka":amountchanged= amountpound *tempArray2[94];
            break;
            case "Morocco": amountchanged= amountpound *tempArray2[96];
            break;
            case "Myanmar": amountchanged= amountpound *tempArray2[98];
            break;
            case "Mexico": amountchanged= amountpound *tempArray2[100];
            break;
            case "Malaysia": amountchanged= amountpound *tempArray2[102];
            break;
            case "New Zealand": amountchanged= amountpound *tempArray2[104];
            break;
            case "Oman": amountchanged= amountpound *tempArray2[106];
            break;
            case "Romania": amountchanged= amountpound *tempArray2[108];
            break;
            case "Russia": amountchanged= amountpound *tempArray2[110];
            break;
            case "Turkey": amountchanged= amountpound *tempArray2[112];
            break;
            case "Silver Ounce": amountchanged= amountpound *tempArray2[114];
            break;
            case "Gold Ounce": amountchanged= amountpound *tempArray2[116] ;
            break;
            case "Platinum Ounce": amountchanged= amountpound *tempArray2[118];
            break;
            case "Bitcoin": amountchanged= amountpound *tempArray2[120];
            break;  
        }
        String value3 = String.format("%.3f",amountchanged);
        fourthtext.setText(value3);
    } catch (FileNotFoundException ex) {
        Logger.getLogger(currencyconver.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_convertActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        from.setSelectedIndex(0);
        first.setSelectedIndex(0);
        second.setSelectedIndex(0);
        third.setSelectedIndex(0);
        fourth.setSelectedIndex(0);
        fromtext.setText(null);
        firsttext.setText(null);
        secondtext.setText(null);
        thirdtext.setText(null);
        fourthtext.setText(null);
    }//GEN-LAST:event_resetActionPerformed

    private void firsttextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firsttextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firsttextActionPerformed

    private void thirdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_thirdItemStateChanged
        int position = third.getSelectedIndex();

        unit4.setText(Currency[position]);
    }//GEN-LAST:event_thirdItemStateChanged

    private void firstItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_firstItemStateChanged
        // TODO add your handling code here:
        int position = first.getSelectedIndex();

        unit2.setText(Currency[position]);
    }//GEN-LAST:event_firstItemStateChanged

    private void fourthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fourthActionPerformed

    private void fourthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fourthItemStateChanged
        // TODO add your handling code here:
        int position = fourth.getSelectedIndex();

        unit5.setText(Currency[position]);
    }//GEN-LAST:event_fourthItemStateChanged

    private void fromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromActionPerformed

    private void fromItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fromItemStateChanged
        // TODO add your handling code here:
        int position = from.getSelectedIndex();

        unit1.setText(Currency[position]);
    }//GEN-LAST:event_fromItemStateChanged

    private void secondItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_secondItemStateChanged
        // TODO add your handling code here:
        int position = second.getSelectedIndex();

        unit3.setText(Currency[position]);
    }//GEN-LAST:event_secondItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton convert;
    private javax.swing.JComboBox<String> first;
    private javax.swing.JTextField firsttext;
    private javax.swing.JLabel firsttitle;
    private javax.swing.JComboBox<String> fourth;
    private javax.swing.JTextField fourthtext;
    private javax.swing.JLabel fourthtitle;
    private javax.swing.JComboBox<String> from;
    private javax.swing.JTextField fromtext;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JButton reset;
    private javax.swing.JComboBox<String> second;
    private javax.swing.JTextField secondtext;
    private javax.swing.JLabel secondtitle;
    private javax.swing.JComboBox<String> third;
    private javax.swing.JTextField thirdtext;
    private javax.swing.JLabel thirdtitle;
    private javax.swing.JLabel unit1;
    private javax.swing.JLabel unit2;
    private javax.swing.JLabel unit3;
    private javax.swing.JLabel unit4;
    private javax.swing.JLabel unit5;
    // End of variables declaration//GEN-END:variables
}

